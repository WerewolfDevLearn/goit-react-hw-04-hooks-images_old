{"version":3,"sources":["components/Loader/Loader.module.css","components/Searchbar/Searchbar.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Loader/Loader.js","components/Modal/Modal.js","components/ModalImage/ModalImage.js","service/api.js","components/App.js","index.js"],"names":["module","exports","Searchbar","onSubmitForm","useState","inputValue","setInputValue","className","id","onSubmit","e","preventDefault","type","autoComplete","autoFocus","placeholder","name","value","onChange","target","ImageGalleryItem","webformatURL","alt","largeImageURL","onImageClick","src","data-largeimageurl","data-id","onClick","url","dataset","largeimageurl","ImageGallery","images","map","image","tags","Button","text","buttonAction","App","LoaderStl","Container","color","height","width","timeout","Component","Modal","onCloseModal","children","useEffect","window","addEventListener","pressEscBtn","removeEventListener","console","log","code","ModalImage","largeImage","protoType","PropTypes","exact","string","isRequired","fetchImageWithKeyword","keyword","page","axios","get","then","response","data","setImages","setKeyword","setPage","setLargeImageURL","error","setError","loading","setLoading","lastPage","setLastPage","fetchImage","imageApi","hits","isLastPage","catch","finally","scrollDown","dif","totalHits","scrollTo","top","document","documentElement","scrollHeight","behavior","query","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.eaf9f7c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Loader_Container__21DKx\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Searchbar({ onSubmitForm }) {\n  const [inputValue, setInputValue] = useState('');\n\n  const onInputValue = e => {\n    const { value } = e.target;\n    setInputValue(value);\n  };\n\n  const onSubmitSearchForm = e => {\n    e.preventDefault();\n    onSubmitForm(inputValue);\n    setInputValue('');\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form id=\"form\" onSubmit={onSubmitSearchForm} className=\"SearchForm\">\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          name=\"inputValue\"\n          value={inputValue}\n          id=\"input\"\n          onChange={onInputValue}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmitForm: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import PropTypes from 'prop-types';\n\nfunction ImageGalleryItem({\n  webformatURL,\n  alt,\n  largeImageURL,\n  id,\n  onImageClick,\n}) {\n  const getlargeImageURL = e => {\n    onImageClick({ url: e.target.dataset.largeimageurl, alt: e.target.alt });\n  };\n  return (\n    <img\n      src={webformatURL}\n      alt={alt}\n      className=\"ImageGalleryItem-image\"\n      data-largeimageurl={largeImageURL}\n      data-id={id}\n      onClick={getlargeImageURL}\n    />\n  );\n}\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string,\n  alt: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from './ImageGalleryItem/ImageGalleryItem';\n\nfunction ImageGallery({ images, onImageClick }) {\n  return (\n    <ul className=\"ImageGallery\">\n      {images.map(image => (\n        <li key={image.id} className=\"ImageGalleryItem\">\n          <ImageGalleryItem\n            webformatURL={image.webformatURL}\n            alt={image.tags}\n            largeImageURL={image.largeImageURL}\n            id={image.id}\n            onImageClick={onImageClick}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n      tags: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onImageClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import PropTypes from 'prop-types';\n\nfunction Button({ text, buttonAction }) {\n  return (\n    <div className=\"buttonContainer\">\n      <button type=\"button\" onClick={buttonAction} className=\"Button\">\n        {text}\n      </button>\n    </div>\n  );\n}\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  buttonAction: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport LoaderStl from './Loader.module.css';\n\nexport default class App extends Component {\n  //other logic\n  render() {\n    return (\n      <div className={LoaderStl.Container}>\n        <Loader\n          type=\"Puff\"\n          color=\"#0F7A8F\"\n          height={100}\n          width={100}\n          timeout={3000} //3 secs\n        />\n      </div>\n    );\n  }\n}\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Modal({ onCloseModal, children }) {\n  useEffect(() => {\n    window.addEventListener('keydown', pressEscBtn);\n\n    return () => {\n      window.removeEventListener('keydown', pressEscBtn);\n\n      onCloseModal();\n    };\n  });\n\n  const pressEscBtn = e => {\n    console.log(e);\n    if (e.code === 'Escape') {\n      onCloseModal();\n    }\n  };\n\n  return (\n    <div className=\"Overlay\" onClick={onCloseModal}>\n      <div className=\"Modal\">{children}</div>\n    </div>\n  );\n}\n\nModal.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Modal;\n","import PropTypes from 'prop-types';\n\nfunction ModalImage({ largeImage }) {\n  const { alt, url } = largeImage;\n  return <img src={url} alt={alt} width=\"600\" />;\n}\n\nModalImage.protoType = {\n  largeImage: PropTypes.exact({\n    alt: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default ModalImage;\n","import axios from 'axios';\nconst apiKey = '17822127-e9a9a0a140ac0dca1ff979a25';\n\nconst fetchImageWithKeyword = (keyword, page) => {\n  return axios\n    .get(\n      `https://pixabay.com/api/?key=${apiKey}&q=${keyword}&image_type=photo&page=${page}&per_page=12`,\n    )\n    .then(response => {\n      // console.log(response);\n      console.log(response.data);\n      return response.data;\n    });\n};\n\nexport default fetchImageWithKeyword;\n","import { useState, useEffect } from 'react';\nimport Searchbar from './Searchbar/Searchbar';\nimport ImageGallery from './ImageGallery/ImageGallery';\nimport Button from './Button/Button';\nimport Loader from './Loader/Loader';\nimport Modal from './Modal/Modal';\nimport ModalImage from './ModalImage/ModalImage';\nimport imageApi from '../service/api';\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [keyword, setKeyword] = useState('');\n  const [page, setPage] = useState(1);\n  const [largeImageURL, setLargeImageURL] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [lastPage, setLastPage] = useState(false);\n\n  function fetchImage() {\n    setLoading(true);\n    imageApi(keyword, page)\n      .then(data => {\n        setImages(images => [...images, ...data.hits]);\n        setPage(page => page + 1);\n        isLastPage(data);\n        console.log(data);\n      })\n      .catch(error => setError(error))\n      .finally(() => setLoading(false));\n  }\n\n  useEffect(() => {\n    if (!keyword) {\n      return;\n    }\n\n    fetchImage();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [keyword]);\n\n  useEffect(() => {\n    if (page > 2) {\n      scrollDown();\n    }\n  }, [page]);\n\n  const onSubmitForm = query => {\n    setKeyword(query);\n    setPage(1);\n    setImages([]);\n  };\n\n  const hideLargeImage = () => {\n    setLargeImageURL(null);\n  };\n\n  const isLastPage = data => {\n    const perPage = 12;\n    const dif = data.totalHits - perPage * page;\n\n    if (dif <= 0) {\n      setLastPage(true);\n    } else {\n      setLastPage(false);\n    }\n  };\n\n  const scrollDown = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <>\n      <Searchbar onSubmitForm={onSubmitForm} />\n      {images.length > 0 && (\n        <ImageGallery images={images} onImageClick={setLargeImageURL} />\n      )}\n      {largeImageURL && (\n        <Modal onCloseModal={hideLargeImage}>\n          <ModalImage largeImage={largeImageURL} />\n        </Modal>\n      )}\n      {images.length > 0 && !lastPage && !loading && (\n        <Button text=\"Load more\" buttonAction={fetchImage} />\n      )}\n      {loading && <Loader />}\n      {error && <p>ERROR</p>}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'modern-normalize';\nimport './components/style.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}